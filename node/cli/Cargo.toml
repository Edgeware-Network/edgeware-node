[package]
name = "edgeware-cli"
version = "4.0.0"
authors = ["Commonwealth Labs <hello@commonwealth.im>"]
description = "Edgeware implementation using a substrate node."
build = "build.rs"
edition = "2021"
default-run = "edgeware"
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[package.metadata.wasm-pack.profile.release]
# `wasm-opt` has some problems on linux, see
# https://github.com/rustwasm/wasm-pack/issues/781 etc.
wasm-opt = false

[[bin]]
name = "edgeware"
path = "bin/main.rs"
required-features = []

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
parity-scale-codec = { workspace = true }
serde = { workspace = true, features = ["derive"] }
futures = { workspace = true, features = ["compat"] }
hex-literal = { workspace = true }
jsonrpsee = { workspace = true, features = ["server", "macros"] }
log = { workspace = true }
maplit = { workspace = true }
rand = { workspace = true }
clap = { workspace = true, features = [ "derive" ], optional = true }
tracing = { workspace = true }
parking_lot = { workspace = true }
hex = { workspace = true }
serde_json = { workspace = true }

# primitives
sp-authority-discovery = { workspace = true, default-features = false }
sp-blockchain = { workspace = true, default-features = false }
sp-consensus-aura = { workspace = true, default-features = false }
sp-finality-grandpa = { workspace = true, default-features = false }
sp-core =  { workspace = true, default-features = false  }
sp-runtime = { workspace = true, default-features = false }
sp-timestamp = { workspace = true, default-features = false }
sp-inherents = { workspace = true, default-features = false }
sp-io = { workspace = true, default-features = false }
sp-consensus = { workspace = true, default-features = false }
sp-transaction-pool = { workspace = true, default-features = false }

# client dependencies
sc-client-api = { workspace = true, default-features = false }
sc-chain-spec = { workspace = true, default-features = false }
sc-consensus = { workspace = true, default-features = false }
sc-transaction-pool = { workspace = true, default-features = false }
sc-network = { workspace = true, default-features = false }
sc-consensus-aura = { workspace = true, default-features = false }
sc-finality-grandpa = { workspace = true, default-features = false }
sc-consensus-slots =  { workspace = true, default-features = false }
sc-client-db = { workspace = true, default-features = false }
sc-offchain = { workspace = true, default-features = false }
sc-rpc = { workspace = true, default-features = false }
sc-basic-authorship = { workspace = true, default-features = false }
sc-service = { workspace = true, default-features = false }
sc-tracing = { workspace = true, default-features = false }
sc-telemetry = { workspace = true, default-features = false }
sc-authority-discovery = { workspace = true, default-features = false }
substrate-prometheus-endpoint = { workspace = true, default-features = false }

# frame dependencies
pallet-indices = { workspace = true, default-features = false }
pallet-timestamp = { workspace = true, default-features = false }
pallet-contracts = { workspace = true, default-features = false }
frame-system = { workspace = true, default-features = false }
pallet-balances = { workspace = true, default-features = false }
pallet-transaction-payment = { workspace = true, default-features = false }
frame-support = { workspace = true, default-features = false }
pallet-im-online = { workspace = true, default-features = false }
pallet-authority-discovery = { workspace = true, default-features = false }
pallet-staking = { workspace = true, default-features = false }
pallet-grandpa = { workspace = true, default-features = false }
pallet-dynamic-fee = { workspace = true, default-features = false }
evm = { workspace = true, default-features = false, features = [ "with-codec" ] } #
fp-evm = { workspace = true, default-features = false }
pallet-evm = { workspace = true, default-features = false }
ethereum-types = { workspace = true, default-features = false, features = ["rlp","codec", "std"] }

# node-specific dependencies
edgeware-runtime = { workspace = true }
edgeware-rpc = { workspace = true }
edgeware-primitives = { workspace = true }
edgeware-executor = { workspace = true }
edgeware-rpc-txpool = { workspace = true }
edgeware-rpc-primitives-txpool = { workspace = true }
edgeware-rpc-debug = { workspace = true }
edgeware-rpc-primitives-debug = { workspace = true }
edgeware-rpc-trace = { workspace = true }

# CLI-specific dependencies
sc-cli = { workspace = true, optional = true, features = ["wasmtime"] }
frame-benchmarking-cli = { workspace = true, optional = true }
edgeware-cli-opt = { workspace = true, optional = true }
fc-consensus = { default-features = false, workspace = true }
fp-consensus = { default-features = false, workspace = true }
fc-rpc = { default-features = false, workspace = true, features = ["rpc_binary_search_estimate"] }
fp-rpc = { default-features = false, workspace = true }
fc-rpc-core = { default-features = false, workspace = true }
fc-db = { default-features = false, workspace = true }
fc-mapping-sync = { default-features = false, workspace = true }
tokio = { workspace = true }

[target.'cfg(target_arch="x86_64")'.dependencies]
edgeware-executor = { workspace = true, features = [ "wasmtime" ] }

[dev-dependencies]
sc-keystore = { workspace = true, default-features = false }
sc-consensus = { workspace = true, default-features = false }
sc-consensus-epochs = { workspace = true, default-features = false }
futures = { workspace = true }
tempfile = { workspace = true }
assert_cmd = { workspace = true }
nix = { workspace = true }
serde_json = { workspace = true }
regex = { workspace = true }
platforms = { workspace = true }
clap = { workspace = true, features = [ "derive" ] }

[build-dependencies]
clap = { workspace = true, features = [ "derive" ], optional = true }
frame-benchmarking-cli = { workspace = true, optional = true }
substrate-build-script-utils = { workspace = true, optional = true }
substrate-frame-cli = { workspace = true, optional = true }
sc-cli = { workspace = true, optional = true, features = ["wasmtime"] }
edgeware-cli-opt = { workspace = true, optional = true }

[features]
default = [ "cli" ]
cli = [
	"edgeware-executor/wasmi-errno",
	"sc-cli",
	"frame-benchmarking-cli",
	"substrate-frame-cli",
	"sc-service/db",
	"clap",
	"pallet-contracts/std",
#	"ethereum-types/std",
	"substrate-build-script-utils",
	"edgeware-cli-opt"
]
frontier-block-import = []
cli-completion = []
runtime-benchmarks = [
	"edgeware-runtime/runtime-benchmarks",
	"frame-benchmarking-cli",
]
fast-runtime = [
	"edgeware-runtime/fast-runtime",
]
beresheet-runtime = [
	"edgeware-runtime/beresheet-runtime",
]
